{"version":3,"file":"static/js/218.6d37805b.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactIListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactFilterLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  position: relative;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-top: 20px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 20px;\n    width: 20px;\n    height: 1px;\n    background: #fff;\n  }\n`;\nexport const ContactFilterInput = styled.input`\n  width: 100%;\n  height: 60px;\n\n  border: none;\n  outline: none;\n  padding: 10px 20px;\n\n  margin-top: 10px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addFilter } from 'redux/contacts/contacts-slice';\nimport { ContactFilterLabel, ContactFilterInput } from './ContactFilter.styled';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const filterContact = e => {\n    dispatch(addFilter(e.target.value));\n  };\n\n  return (\n    <ContactFilterLabel>\n      Find contacts by name\n      <ContactFilterInput type=\"text\" name=\"filter\" onChange={filterContact} />\n    </ContactFilterLabel>\n  );\n};\n","import styled from '@emotion/styled';\nimport { IoPersonAdd } from 'react-icons/io5';\n\nexport const ContactPageWrap = styled.div`\n  margin: 0 auto;\n  width: 1280px;\n  display: flex;\n  padding: 10px;\n`;\n\nexport const FormWrap = styled.div`\n  flex-basis: calc(50% - 20px);\n  padding: 20px;\n  margin: 10px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nexport const Form = styled.form``;\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  position: relative;\n  color: #fff;\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-top: 10px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 20px;\n    width: 20px;\n    height: 1px;\n    background: #fff;\n  }\n`;\nexport const FormInput = styled.input`\n  margin-top: 10px;\n  width: 100%;\n  height: 60px;\n  border: none;\n  outline: none;\n  padding: 10px 20px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\nexport const FormButton = styled.button`\n  cursor: pointer;\n  position: relative;\n  top: 0;\n  width: 60px;\n  height: 60px;\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-size: 1.5em;\n  border: 1px solid rgba(255, 255, 255, 0.4);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(4px);\n\n  box-shadow: 0 5px 45px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 40px;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.5);\n    transform: skewX(45deg) translateX(150px);\n    transition: 0.5s;\n  }\n\n  &:hover::before {\n    transform: skewX(45deg) translateX(-150px);\n  }\n`;\n\nexport const AddIcon = styled(IoPersonAdd)``;\n","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperation } from 'redux/contacts';\nimport { contactsSelectors } from 'redux/contacts';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n  AddIcon,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const { register, handleSubmit, resetField } = useForm();\n\n  const onSubmit = async data => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${data.name} is already in contacts.`);\n    }\n\n    dispatch(contactsOperation.addContacts(data));\n\n    resetField('name');\n    resetField('number');\n\n    toast.success(`${data.name} was created!`);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormLabel>\n          Name\n          <FormInput\n            {...register('name')}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n            autoComplete=\"off\"\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormInput\n            {...register('number')}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            autoComplete=\"off\"\n          />\n        </FormLabel>\n\n        <FormButton type=\"submit\">\n          <AddIcon height=\"24\" />\n        </FormButton>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactTitle = styled.h2`\n  margin-top: 20px;\n`;\nexport const ContactNameList = styled.ul`\n  height: 600px;\n  list-style-type: none;\n  flex-basis: calc(50% - 20px);\n  padding: 20px;\n  margin: 10px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: scroll;\n`;\n","import styled from '@emotion/styled';\nimport { MdDelete } from 'react-icons/md';\nimport { MdModeEditOutline } from 'react-icons/md';\nimport { MdCancel } from 'react-icons/md';\nimport { IoCheckmarkDoneCircle } from 'react-icons/io5';\n\nexport const ContactNameItem = styled.li`\n  position: relative;\n\n  margin-bottom: 10px;\n  min-height: 60px;\n  background: rgba(255, 255, 255, 0.1);\n  text-align: center;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n`;\nexport const ContactTextWrap = styled.div`\n  padding: 20px 10px 10px 10px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactNameText = styled.p`\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n`;\nexport const ContactNumberText = styled.p`\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n`;\n\nexport const ContactListButton = styled.button`\n  cursor: pointer;\n  position: relative;\n  top: 0;\n  width: 40px;\n  height: 40px;\n  margin-left: 10px;\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-size: 1.5em;\n  border: 1px solid rgba(255, 255, 255, 0.4);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(4px);\n\n  box-shadow: 0 5px 45px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 40px;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.5);\n    transform: skewX(45deg) translateX(150px);\n    transition: 0.5s;\n  }\n\n  &:hover::before {\n    transform: skewX(45deg) translateX(-150px);\n  }\n`;\n\nexport const Form = styled.form``;\n\nexport const FormInputWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const FormInputName = styled.input`\n  width: 65%;\n  height: 52px;\n  border: none;\n  outline: none;\n  padding: 10px 10px 5px 10px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\nexport const FormInputNumber = styled.input`\n  width: 35%;\n  margin-left: 10px;\n  height: 52px;\n  border: none;\n  outline: none;\n  padding: 10px 10px 5px 10px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 20px;\n  font-weight: 600;\n  letter-spacing: 0.2px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.5);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\n\nexport const FormButtonWrap = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n`;\n\nexport const FormButton = styled.button`\n  cursor: pointer;\n  position: relative;\n  top: 0;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10px;\n  margin-top: 10px;\n  color: #fff;\n  font-size: 1.5em;\n  border: 1px solid rgba(255, 255, 255, 0.4);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(4px);\n\n  box-shadow: 0 5px 45px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 40px;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.5);\n    transform: skewX(45deg) translateX(150px);\n    transition: 0.5s;\n  }\n\n  &:hover::before {\n    transform: skewX(45deg) translateX(-150px);\n  }\n`;\n\nexport const DeleteIcon = styled(MdDelete)``;\nexport const EditIcon = styled(MdModeEditOutline)``;\nexport const CancelIcon = styled(MdCancel)``;\nexport const DoneIcon = styled(IoCheckmarkDoneCircle)``;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { toast } from 'react-hot-toast';\nimport {\n  ContactNameItem,\n  ContactTextWrap,\n  ContactNameText,\n  ContactNumberText,\n  ContactListButton,\n  Form,\n  FormInputWrap,\n  FormInputName,\n  FormInputNumber,\n  FormButtonWrap,\n  FormButton,\n  DeleteIcon,\n  EditIcon,\n  CancelIcon,\n  DoneIcon,\n} from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperation, contactsSelectors } from 'redux/contacts';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [showButton, setShowButton] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n\n  const isLoading = useSelector(contactsSelectors.isLoading);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, resetField } = useForm({\n    defaultValues: {\n      name,\n      number,\n    },\n  });\n\n  const onShowButton = () => {\n    setShowButton(!showButton);\n  };\n\n  const onShowEditForm = () => {\n    setShowEditForm(!showEditForm);\n  };\n\n  const onDeleteContact = id => {\n    dispatch(contactsOperation.deleteContacts(id));\n    toast.success(`${name} has been deleted!`);\n  };\n\n  const onSubmit = async contact => {\n    dispatch(contactsOperation.removeContacts({ id, ...contact }));\n\n    toast.success(`${contact.name} has been changed!`);\n\n    onShowButton();\n    onShowEditForm();\n\n    resetField('name');\n    resetField('number');\n  };\n\n  return (\n    <>\n      <ContactNameItem>\n        {!showEditForm && (\n          <>\n            <ContactTextWrap onClick={() => onShowButton()}>\n              <ContactNameText>{name}</ContactNameText>\n              <ContactNumberText>{number}</ContactNumberText>\n            </ContactTextWrap>\n            <AnimatePresence>\n              {showButton && (\n                <motion.div\n                  initial={{ height: 0 }}\n                  animate={{ height: 'auto' }}\n                  exit={{ height: 0 }}\n                  style={{\n                    overflow: 'hidden',\n                    display: 'flex',\n                    paddingBottom: '10px',\n                  }}\n                  transition={{ duration: 0.5 }}\n                >\n                  <ContactListButton\n                    onClick={() => onDeleteContact(id)}\n                    disabled={isLoading}\n                  >\n                    <DeleteIcon />\n                  </ContactListButton>\n                  <ContactListButton\n                    onClick={() => onShowEditForm()}\n                    disabled={isLoading}\n                  >\n                    <EditIcon />\n                  </ContactListButton>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </>\n        )}\n        {showEditForm && (\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <FormInputWrap>\n              <FormInputName\n                {...register('name')}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n                required\n                autoComplete=\"off\"\n              />\n              <FormInputNumber\n                {...register('number')}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                autoComplete=\"off\"\n              />\n            </FormInputWrap>\n            <FormButtonWrap>\n              <FormButton\n                onClick={() => {\n                  onShowButton();\n                  onShowEditForm();\n                }}\n              >\n                <CancelIcon />\n              </FormButton>\n              <FormButton type=\"submit\">\n                <DoneIcon />\n              </FormButton>\n            </FormButtonWrap>\n          </Form>\n        )}\n      </ContactNameItem>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { ContactNameList } from './ContactList.styled';\nimport { ContactListItem } from 'components/ContactListItem/ContactIListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperation, contactsSelectors } from 'redux/contacts';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const isLoading = useSelector(contactsSelectors.isLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperation.fetchContacts());\n  }, [dispatch]);\n\n  const getContactsList = () => {\n    const filterValue = filter.toLowerCase().trim();\n    const sortData = [...contacts].sort((firstEl, secondEl) =>\n      firstEl.name.localeCompare(secondEl.name)\n    );\n\n    return sortData.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  return (\n    <>\n      <ContactNameList>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {contacts &&\n              getContactsList().map(({ name, number, id }) => (\n                <ContactListItem key={id} id={id} name={name} number={number} />\n              ))}\n          </>\n        )}\n      </ContactNameList>\n    </>\n  );\n};\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport {\n  FormWrap,\n  ContactPageWrap,\n} from 'components/ContactForm/ContactForm.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <ContactPageWrap>\n      <FormWrap>\n        <ContactForm />\n        <ContactFilter />\n      </FormWrap>\n      <ContactList />\n    </ContactPageWrap>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactFilterLabel","styled","ContactFilterInput","ContactFilter","dispatch","useDispatch","type","name","onChange","e","addFilter","target","value","ContactPageWrap","FormWrap","Form","FormLabel","FormInput","FormButton","AddIcon","IoPersonAdd","ContactForm","contacts","useSelector","contactsSelectors","useForm","register","handleSubmit","resetField","onSubmit","data","some","contact","toLowerCase","toast","contactsOperation","pattern","title","required","autoComplete","height","ContactNameList","ContactNameItem","ContactTextWrap","ContactNameText","ContactNumberText","ContactListButton","FormInputWrap","FormInputName","FormInputNumber","FormButtonWrap","DeleteIcon","MdDelete","EditIcon","MdModeEditOutline","CancelIcon","MdCancel","DoneIcon","IoCheckmarkDoneCircle","ContactListItem","id","number","useState","showButton","setShowButton","showEditForm","setShowEditForm","isLoading","defaultValues","onShowButton","onShowEditForm","onClick","AnimatePresence","motion","initial","animate","exit","style","overflow","display","paddingBottom","transition","duration","onDeleteContact","disabled","ContactList","filter","useEffect","Loader","filterValue","trim","sort","firstEl","secondEl","localeCompare","includes","getContactsList","map"],"sourceRoot":""}